import{_ as i,c as l,o as e,Q as t}from"./chunks/framework.1cc28bed.js";const h=JSON.parse('{"title":"计算机网络","description":"","frontmatter":{},"headers":[],"relativePath":"code/interview/network.md","filePath":"code/interview/network.md","lastUpdated":1686728129000}'),a={name:"code/interview/network.md"},o=t('<h1 id="计算机网络" tabindex="-1">计算机网络 <a class="header-anchor" href="#计算机网络" aria-label="Permalink to &quot;计算机网络&quot;">​</a></h1><ul><li>从系统层面上，UDP如何保证尽量可靠？</li><li>RestFul 与 RPC 的区别是什么？RestFul 的优点在哪里？</li><li>RestFul 是什么？RestFul 请求的 URL 有什么特点？</li><li>简述 RPC 的调用过程</li><li>什么是 ARP 协议？简述其使用场景</li><li>DNS 查询服务器的基本流程是什么？DNS 劫持是什么？</li><li>什么是中间人攻击？如何防止攻击？</li><li>如何防止传输内容被篡改？</li><li>从输入 URL 到展现页面的全过程</li><li>什么是跨域，什么情况下会发生跨域请求？</li><li>简述 WebSocket 是如何进行传输的</li><li>Cookie 和 Session 的关系和区别是什么？</li></ul><h2 id="tcp" tabindex="-1">TCP <a class="header-anchor" href="#tcp" aria-label="Permalink to &quot;TCP&quot;">​</a></h2><ul><li>简述 TCP 三次握手以及四次挥手的流程。为什么需要三次握手以及四次挥手？</li><li>TCP 四次挥手的时候 CLOSE_WAIT 的话怎么处理？</li><li>简述 TCP 的 TIME_WAIT</li><li>TCP 的 keepalive 了解吗？说一说它和 HTTP 的 keepalive 的区别？</li><li>TCP 怎么保证可靠传输？</li><li>如何解决 TCP 传输丢包问题？</li><li>TCP 如何实现数据有序性？</li><li>TCP 中常见的拥塞控制算法有哪些？</li><li>简述 TCP 滑动窗口以及重传机制</li><li>简述 TCP 中的拥塞控制与滑动窗口机制</li><li>简述 TCP 协议的延迟 ACK 和累计应答</li><li>简述 TCP 的报文头部结构</li><li>什么是 TCP 粘包和拆包？</li><li>TCP 中 SYN 攻击是什么？如何防止？</li><li>TCP 与 UDP 在网络协议中的哪一层，他们之间有什么区别？</li></ul><h2 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-label="Permalink to &quot;HTTP&quot;">​</a></h2><ul><li>HTTP 与 HTTPS 有哪些区别？</li><li>简述 HTTP 1.0，1.1，2.0 的主要区别</li><li>HTTP 是无状态的吗？需要保持状态的场景应该怎么做？</li><li>简述 HTTPS 的加密与认证过程</li><li>简述对称与非对称加密的概念</li><li>HTTP 的方法有哪些？</li></ul>',6),T=[o];function r(P,n,s,c,_,d){return e(),l("div",null,T)}const u=i(a,[["render",r]]);export{h as __pageData,u as default};
