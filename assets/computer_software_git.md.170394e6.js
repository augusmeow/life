import{_ as s,c as a,o as l,Q as n}from"./chunks/framework.1cc28bed.js";const u=JSON.parse('{"title":"Git","description":"","frontmatter":{"icon":"vscode-icons:file-type-git"},"headers":[],"relativePath":"computer/software/git.md","filePath":"computer/software/git.md","lastUpdated":1687141793000}'),o={name:"computer/software/git.md"},e=n(`<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><h2 id="sol" tabindex="-1">sol <a class="header-anchor" href="#sol" aria-label="Permalink to &quot;sol&quot;">​</a></h2><h3 id="舍弃本地所有提交" tabindex="-1">舍弃本地所有提交 <a class="header-anchor" href="#舍弃本地所有提交" aria-label="Permalink to &quot;舍弃本地所有提交&quot;">​</a></h3><p><code>git reset --hard origin/your_branch</code></p><h3 id="could-not-access-submodule" tabindex="-1">could not access submodule <a class="header-anchor" href="#could-not-access-submodule" aria-label="Permalink to &quot;could not access submodule&quot;">​</a></h3><p>just execute <code>git submodule update --init --recursive</code></p><h3 id="git-submodule-already-exists-in-the-index" tabindex="-1">git submodule: already exists in the index <a class="header-anchor" href="#git-submodule-already-exists-in-the-index" aria-label="Permalink to &quot;git submodule: already exists in the index&quot;">​</a></h3><p><code>git rm -rf --cached xx/xx</code></p><h3 id="git-del-commit" tabindex="-1">git del commit <a class="header-anchor" href="#git-del-commit" aria-label="Permalink to &quot;git del commit&quot;">​</a></h3><p><code>git rebase -i commitID</code></p><blockquote><p><code>git log</code> found id you want to del</p></blockquote><p>rebase then enter, edit file, change <code>pick</code> to <code>drop</code>, then save</p><p>这个时候本地删除该 id 的操作已经完成 然后推送 <code>git push --force</code></p><p>移除 rebase</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rebase</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--abort</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rebase</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--abort</span></span></code></pre></div><p>这个命令会撤销当前正在进行的 rebase 操作并恢复到 rebase 之前的状态</p><h3 id="the-following-untracked-working-tree-files-would-be-overwritten-by-checkout" tabindex="-1">The following untracked working tree files would be overwritten by checkout <a class="header-anchor" href="#the-following-untracked-working-tree-files-would-be-overwritten-by-checkout" aria-label="Permalink to &quot;The following untracked working tree files would be overwritten by checkout&quot;">​</a></h3><p>不知道怎么解决。但是日前，是因为把 remote 仓库 rename 了。后面是把本地仓库删了，重新拉取了。</p><h2 id="clone" tabindex="-1">clone <a class="header-anchor" href="#clone" aria-label="Permalink to &quot;clone&quot;">​</a></h2><p><code>git clone &lt;xxx.git&gt;</code></p><p><code>git clone --branch your_branch_or_tag &lt;xxx.git&gt;</code></p><h2 id="submodule" tabindex="-1">submodule <a class="header-anchor" href="#submodule" aria-label="Permalink to &quot;submodule&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">git_ur</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># clone 时一同初始化并checkout子模块commit，且会拉取嵌套的子模块(即子模块又包含它引用的子模块)</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recurse-submodules</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-j8</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">ur</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># For already cloned repos, or older Git versions, use:</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--init</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recursive</span></span>
<span class="line"><span style="color:#6A737D;"># also </span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recurse-submodules</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">git_ur</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># clone 时一同初始化并checkout子模块commit，且会拉取嵌套的子模块(即子模块又包含它引用的子模块)</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recurse-submodules</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-j8</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">ur</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># For already cloned repos, or older Git versions, use:</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--init</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recursive</span></span>
<span class="line"><span style="color:#6A737D;"># also </span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recurse-submodules</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># update submodule</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span></span>
<span class="line"><span style="color:#6A737D;"># 也可以在主模块更新</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--remote</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">submoduleNam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># 可以通过以下命令设置特定的分支</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitmodules</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">submodule.</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">submoduleNam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">.branch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># update submodule</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span></span>
<span class="line"><span style="color:#6A737D;"># 也可以在主模块更新</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--remote</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">submoduleNam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># 可以通过以下命令设置特定的分支</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitmodules</span><span style="color:#24292E;"> </span><span style="color:#032F62;">submodule.</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">submoduleNam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">.branch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>确保子模块更新</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 在主模块 push 之前，检查子模块是否 push，包括嵌套子模块</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recurse-submodules=check</span></span>
<span class="line"><span style="color:#6A737D;"># 在主模块 push 之前，自动 push 子模块，包括嵌套子模块</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--recurse-submodules=on-demand</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 在主模块 push 之前，检查子模块是否 push，包括嵌套子模块</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recurse-submodules=check</span></span>
<span class="line"><span style="color:#6A737D;"># 在主模块 push 之前，自动 push 子模块，包括嵌套子模块</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--recurse-submodules=on-demand</span></span></code></pre></div><p><a href="https://cloud.tencent.com/developer/article/2143377" target="_blank" rel="noreferrer">refer</a></p><h2 id="remote" tabindex="-1">remote <a class="header-anchor" href="#remote" aria-label="Permalink to &quot;remote&quot;">​</a></h2><ul><li><code>git remote -v</code></li><li><code>git remote show [remote]</code> 显示某个远程仓库的信息</li><li><code>git remote add [shortname] [url]</code> 添加远程版本库</li><li><code>git push -u origin master</code> push</li><li><code>git remote rm name</code> 删除远程仓库</li><li><code>git remote rename old_name new_name</code> 修改仓库名</li><li><code>git remote set-url origin [new_url]</code> <a href="https://docs.github.com/en/get-started/getting-started-with-git/managing-remote-repositories#changing-a-remote-repositorys-url" target="_blank" rel="noreferrer">修改仓库url</a></li></ul><h2 id="config" tabindex="-1">config <a class="header-anchor" href="#config" aria-label="Permalink to &quot;config&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.email</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;you@example.com&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Your Name&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.email</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;you@example.com&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Your Name&quot;</span></span></code></pre></div><h2 id="push" tabindex="-1">push <a class="header-anchor" href="#push" aria-label="Permalink to &quot;push&quot;">​</a></h2><h3 id="push-to-remote" tabindex="-1">push to remote <a class="header-anchor" href="#push-to-remote" aria-label="Permalink to &quot;push to remote&quot;">​</a></h3><p><code>git push &lt;remote&gt; &lt;branch&gt;</code></p><p>If your upstream branch is not already created, you will need to create it by running the “git push” command with the “-u” option for upstream.</p><p><code>git push -u origin feature</code></p><h3 id="push-b-to-anther-b" tabindex="-1">push b to anther b <a class="header-anchor" href="#push-b-to-anther-b" aria-label="Permalink to &quot;push b to anther b&quot;">​</a></h3><p><code>git push &lt;remote&gt; &lt;local_branch&gt;:&lt;remote_name&gt;</code></p><h2 id="status" tabindex="-1">status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;status&quot;">​</a></h2><p><code>git status</code></p><p><code>-s</code> 参数来获得简短的输出结果</p><p><code>git status ./</code></p><h2 id="diff" tabindex="-1">diff <a class="header-anchor" href="#diff" aria-label="Permalink to &quot;diff&quot;">​</a></h2><ul><li>尚未缓存的改动：git diff <ul><li><code>git diff [file]</code></li><li><code>git diff [first-branch]...[second-branch]</code></li></ul></li><li>查看已缓存的改动： git diff --cached <ul><li><code>git diff --cached [file]</code></li></ul></li><li>查看已缓存的与未缓存的所有改动：git diff HEAD</li><li>显示摘要而非整个 diff：git diff --stat</li></ul><h2 id="commit" tabindex="-1">commit <a class="header-anchor" href="#commit" aria-label="Permalink to &quot;commit&quot;">​</a></h2><p><code>git commit -m &quot;msg&quot;</code></p><h3 id="git-commit-log" tabindex="-1">git commit log <a class="header-anchor" href="#git-commit-log" aria-label="Permalink to &quot;git commit log&quot;">​</a></h3><p><code>git commit -m [message]</code></p><p>-a 参数设置修改文件后不需要执行 git add 命令，直接来提交</p><blockquote><p>Commit message 的格式 每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。</p></blockquote><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">// 空一行</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">// 空一行</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;footer&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span style="color:#24292E;">// 空一行</span></span>
<span class="line"><span style="color:#24292E;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#24292E;">// 空一行</span></span>
<span class="line"><span style="color:#24292E;">&lt;footer&gt;</span></span></code></pre></div><blockquote><p>其中，Header 是必需的，Body 和 Footer 可以省略。</p></blockquote><p>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><h4 id="header" tabindex="-1">Header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;Header&quot;">​</a></h4><p>Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。</p><ol><li><p>type</p><p>type用于说明 commit 的类别，只允许使用下面7个标识。</p><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul><p>如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</p></li><li><p>scope</p><p>scope用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p></li><li><p>subject</p><p>subject是 commit 目的的简短描述，不超过50个字符。</p><ul><li>以动词开头，使用第一人称现在时，比如change，而不是changed或changes</li><li>第一个字母小写</li><li>结尾不加句号（.）</li></ul></li></ol><h4 id="body" tabindex="-1">Body <a class="header-anchor" href="#body" aria-label="Permalink to &quot;Body&quot;">​</a></h4><p>Body 部分是对本次 commit 的详细描述，可以分成多行。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">More detailed explanatory text, if necessary. Wrap it to about 72 characters or so.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">Further paragraphs come after blank lines.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFAB70;">-</span><span style="color:#E1E4E8;"> Bullet points are okay, too</span></span>
<span class="line"><span style="color:#FFAB70;">-</span><span style="color:#E1E4E8;"> Use a hanging indent</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">More detailed explanatory text, if necessary. Wrap it to about 72 characters or so.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">Further paragraphs come after blank lines.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> Bullet points are okay, too</span></span>
<span class="line"><span style="color:#E36209;">-</span><span style="color:#24292E;"> Use a hanging indent</span></span></code></pre></div><p>有两个注意点。</p><ol><li>使用第一人称现在时，比如使用change而不是changed或changes。</li><li>应该说明代码变动的动机，以及与以前行为的对比。</li></ol><h4 id="footer" tabindex="-1">Footer <a class="header-anchor" href="#footer" aria-label="Permalink to &quot;Footer&quot;">​</a></h4><p>Footer 部分只用于两种情况。</p><ol><li><p>不兼容变动</p><p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">BREAKING CHANGE: isolate scope bindings definition has changed.  </span></span>
<span class="line"><span style="color:#E1E4E8;">To migrate the code follow the example below:  </span></span>
<span class="line"><span style="color:#E1E4E8;">Before:  </span></span>
<span class="line"><span style="color:#E1E4E8;">scope: { myAttr: &#39;attribute&#39;, }  </span></span>
<span class="line"><span style="color:#E1E4E8;">After:  </span></span>
<span class="line"><span style="color:#E1E4E8;">scope: { myAttr: &#39;@&#39;, }  </span></span>
<span class="line"><span style="color:#E1E4E8;">The removed </span><span style="color:#79B8FF;">\`inject\`</span><span style="color:#E1E4E8;"> wasn&#39;t generaly useful for directives so there should be no code using it.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">BREAKING CHANGE: isolate scope bindings definition has changed.  </span></span>
<span class="line"><span style="color:#24292E;">To migrate the code follow the example below:  </span></span>
<span class="line"><span style="color:#24292E;">Before:  </span></span>
<span class="line"><span style="color:#24292E;">scope: { myAttr: &#39;attribute&#39;, }  </span></span>
<span class="line"><span style="color:#24292E;">After:  </span></span>
<span class="line"><span style="color:#24292E;">scope: { myAttr: &#39;@&#39;, }  </span></span>
<span class="line"><span style="color:#24292E;">The removed </span><span style="color:#005CC5;">\`inject\`</span><span style="color:#24292E;"> wasn&#39;t generaly useful for directives so there should be no code using it.</span></span></code></pre></div></li><li><p>关闭 Issue</p><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Closes #234</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Closes #234</span></span></code></pre></div><p>也可以一次关闭多个 issue 。</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">Closes #123, #245, #992</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">Closes #123, #245, #992</span></span></code></pre></div></li></ol><h2 id="git-reset" tabindex="-1">git reset <a class="header-anchor" href="#git-reset" aria-label="Permalink to &quot;git reset&quot;">​</a></h2><p><code>git reset [--soft | --mixed | --hard] [HEAD]</code></p><ul><li>--mixed 为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</li><li>--soft 参数用于回退到某个版本</li><li>--hard 参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交 <blockquote><p>谨慎使用 –-hard 参数，它会删除回退点之前的所有信息。</p></blockquote></li></ul><p><strong>HEAD</strong> 说明：</p><ul><li>HEAD 表示当前版本</li><li>HEAD^ 上一个版本</li><li>HEAD^^ 上上一个版本</li><li>以此类推... 可以使用 ～数字表示</li><li>HEAD~0 表示当前版本</li><li>HEAD~1 上一个版本</li><li>HEAD^2 上上一个版本</li><li>以此类推...</li></ul><h2 id="git遗弃本地所有修改" tabindex="-1">git遗弃本地所有修改 <a class="header-anchor" href="#git遗弃本地所有修改" aria-label="Permalink to &quot;git遗弃本地所有修改&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#本地所有的修改，没有提交的，都返回到原来的状态</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#本地所有的修改，没有提交的，都返回到原来的状态</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div><h2 id="git-checkout-指定版本" tabindex="-1">git checkout 指定版本 <a class="header-anchor" href="#git-checkout-指定版本" aria-label="Permalink to &quot;git checkout 指定版本&quot;">​</a></h2><ol><li>切换到master: <code>git checkout master</code></li><li>下载最新代码: <code>git pull</code></li><li>下载head： <code>git checkout HEAD</code></li><li>查看log找到需要的版本: <code>git log</code></li><li>根据header checkout : <code>git checkout XXXXXX</code></li></ol><h2 id="branch" tabindex="-1">branch <a class="header-anchor" href="#branch" aria-label="Permalink to &quot;branch&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">existing_branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">new_branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">switch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">existing_branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">switch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">non_existing_branc</span><span style="color:#E1E4E8;">h</span><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">existing_branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">new_branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">switch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">existing_branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">switch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">non_existing_branc</span><span style="color:#24292E;">h</span><span style="color:#D73A49;">&gt;</span></span></code></pre></div><ol><li><code>git branch</code></li><li><code>git branch -a</code> //查看历史</li><li><code>git branch -d dev</code> or <code>git branch –delete dev</code> //删除分支</li><li><code>git push &lt;remote-name&gt; --delete &lt;branch-name&gt;</code> //删除远程分支</li><li><code>git checkout -b dev origin/dev</code> //checkout 远程</li></ol><h2 id="git如何取消merge" tabindex="-1">git如何取消merge <a class="header-anchor" href="#git如何取消merge" aria-label="Permalink to &quot;git如何取消merge&quot;">​</a></h2><p>当我们使用git merge操作合并代码但还没add时，若想取消这次合并，使用<code>git merge --abort</code>命令即可</p><p>假如不幸已经 <code>git add</code> 了怎么办呢？ 其实也很简单，先用 <code>git reflog</code> 指令显示历史的操作</p><p>再用 <code>git reset --hard commit id</code>就可以回退到操作之前的状态了</p><h2 id="git-合并没有共同祖先的分支" tabindex="-1">git 合并没有共同祖先的分支 <a class="header-anchor" href="#git-合并没有共同祖先的分支" aria-label="Permalink to &quot;git 合并没有共同祖先的分支&quot;">​</a></h2><blockquote><p>fatal: refusing to merge unrelated histories</p></blockquote><p><code>git pull origin master --allow-unrelated-histories</code></p><h2 id="linux下git免密码登录配置" tabindex="-1">linux下git免密码登录配置 <a class="header-anchor" href="#linux下git免密码登录配置" aria-label="Permalink to &quot;linux下git免密码登录配置&quot;">​</a></h2><blockquote><p><a href="http://yongqing.is-programmer.com/posts/80371.html" target="_blank" rel="noreferrer">原链接</a></p></blockquote><p>使用git push提交时，每次都要输入密码，次数多了，感觉挺麻烦. 如果git以ssh协议通讯，免密码可以用ssh公钥设置免登录。如果git时以https方式访问呢，该怎么办？下面方式可以解决这个问题.</p><ol><li><p>编辑<code>git-credentials</code>文件(如果没有 键入 <code>touch ~/.git-credentials</code>)，<code>vi ~/.git-credentials</code></p></li><li><p>文件中添加<code>https://{username}:{passeord}@domain</code>，如果账号密码中有@符号，用40%代替</p></li><li><p><code>git config --global credential.helper store</code></p></li><li><p><code>cat .gitconfig</code> 出现 <code>helper = store</code>, 再尝试git push不再需要输入密码.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.gitconfig</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">[credential]</span></span>
<span class="line"><span style="color:#B392F0;">helper</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">store</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">cat</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.gitconfig</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">[credential]</span></span>
<span class="line"><span style="color:#6F42C1;">helper</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">store</span></span></code></pre></div></li></ol><h3 id="better" tabindex="-1">better <a class="header-anchor" href="#better" aria-label="Permalink to &quot;better&quot;">​</a></h3><p><a href="https://git-scm.com/book/en/v2/Git-on-the-Server-Generating-Your-SSH-Public-Key" target="_blank" rel="noreferrer">服务器上的 Git - 生成 SSH 公钥</a></p><p><a href="#ssh">below</a></p><h2 id="ssh" tabindex="-1">ssh <a class="header-anchor" href="#ssh" aria-label="Permalink to &quot;ssh&quot;">​</a></h2><p>本地存放多个 ssh</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># gitlab</span></span>
<span class="line"><span style="color:#B392F0;">Host</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssh1</span></span>
<span class="line"><span style="color:#B392F0;">HostName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gitlab.com</span></span>
<span class="line"><span style="color:#B392F0;">PreferredAuthentications</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">publickey</span></span>
<span class="line"><span style="color:#B392F0;">IdentityFile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/gitlab_id_rsa</span></span>
<span class="line"><span style="color:#6A737D;"># github</span></span>
<span class="line"><span style="color:#B392F0;">Host</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ssh1</span></span>
<span class="line"><span style="color:#B392F0;">HostName</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">github.com</span></span>
<span class="line"><span style="color:#B392F0;">PreferredAuthentications</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">publickey</span></span>
<span class="line"><span style="color:#B392F0;">IdentityFile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/.ssh/github_id_rsa</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># gitlab</span></span>
<span class="line"><span style="color:#6F42C1;">Host</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssh1</span></span>
<span class="line"><span style="color:#6F42C1;">HostName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gitlab.com</span></span>
<span class="line"><span style="color:#6F42C1;">PreferredAuthentications</span><span style="color:#24292E;"> </span><span style="color:#032F62;">publickey</span></span>
<span class="line"><span style="color:#6F42C1;">IdentityFile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/gitlab_id_rsa</span></span>
<span class="line"><span style="color:#6A737D;"># github</span></span>
<span class="line"><span style="color:#6F42C1;">Host</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ssh1</span></span>
<span class="line"><span style="color:#6F42C1;">HostName</span><span style="color:#24292E;"> </span><span style="color:#032F62;">github.com</span></span>
<span class="line"><span style="color:#6F42C1;">PreferredAuthentications</span><span style="color:#24292E;"> </span><span style="color:#032F62;">publickey</span></span>
<span class="line"><span style="color:#6F42C1;">IdentityFile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/.ssh/github_id_rsa</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ed25519</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;email@example.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># or</span></span>
<span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;email@example.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># for name</span></span>
<span class="line"><span style="color:#B392F0;">ssh-keygen</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-o</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rsa</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4096</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;email@example.com&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-f</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">keynam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># To test whether your SSH key was added correctly</span></span>
<span class="line"><span style="color:#B392F0;">ssh</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-T</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git@gitlab.com</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ed25519</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;email@example.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># or</span></span>
<span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;email@example.com&quot;</span></span>
<span class="line"><span style="color:#6A737D;"># for name</span></span>
<span class="line"><span style="color:#6F42C1;">ssh-keygen</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-o</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rsa</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4096</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;email@example.com&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-f</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">keynam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6A737D;"># To test whether your SSH key was added correctly</span></span>
<span class="line"><span style="color:#6F42C1;">ssh</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-T</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git@gitlab.com</span></span></code></pre></div><h2 id="qa" tabindex="-1">QA <a class="header-anchor" href="#qa" aria-label="Permalink to &quot;QA&quot;">​</a></h2>`,95),p=[e];function t(c,r,i,y,d,E){return l(),a("div",null,p)}const g=s(o,[["render",t]]);export{u as __pageData,g as default};
