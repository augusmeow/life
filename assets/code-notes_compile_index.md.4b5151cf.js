import{_ as s,c as a,o as e,Q as n}from"./chunks/framework.1cc28bed.js";const b=JSON.parse('{"title":"Compile","description":"","frontmatter":{"icon":"fluent-emoji-flat:person-running-light"},"headers":[],"relativePath":"code-notes/compile/index.md","filePath":"code-notes/compile/index.md","lastUpdated":1687141793000}'),o={name:"code-notes/compile/index.md"},l=n(`<h1 id="compile" tabindex="-1">Compile <a class="header-anchor" href="#compile" aria-label="Permalink to &quot;Compile&quot;">​</a></h1><h2 id="cannot-bind-lvalue-to" tabindex="-1">cannot bind ... lvalue to ... <a class="header-anchor" href="#cannot-bind-lvalue-to" aria-label="Permalink to &quot;cannot bind ... lvalue to ...&quot;">​</a></h2><p><code>error: cannot bind &#39;std::ostream {aka std::basic_ostream&lt;char&gt;}&#39; lvalue to &#39;std::basic_ostream&lt;char&gt;&amp;&amp;&#39;</code></p><h2 id="make-1-no-rule-to-make-target" tabindex="-1">make[1]: *** No rule to make target <a class="header-anchor" href="#make-1-no-rule-to-make-target" aria-label="Permalink to &quot;make[1]: *** No rule to make target&quot;">​</a></h2><p>清除之前生成的 build</p><h2 id="can-not-be-used-when-making-a-shared-object" tabindex="-1">can not be used when making a shared object <a class="header-anchor" href="#can-not-be-used-when-making-a-shared-object" aria-label="Permalink to &quot;can not be used when making a shared object&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/usr/bin/ld:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/usr/lib/gcc/x86_64-linux-gnu/7/crtbeginT.o:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">relocation</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">R_X86_64_32</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">against</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">hidden</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">symbol</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">__TMC_END__&#39; can not be used when making a shared object</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/usr/bin/ld:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/usr/lib/gcc/x86_64-linux-gnu/7/crtbeginT.o:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">relocation</span><span style="color:#24292E;"> </span><span style="color:#032F62;">R_X86_64_32</span><span style="color:#24292E;"> </span><span style="color:#032F62;">against</span><span style="color:#24292E;"> </span><span style="color:#032F62;">hidden</span><span style="color:#24292E;"> </span><span style="color:#032F62;">symbol</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">__TMC_END__&#39; can not be used when making a shared object</span></span></code></pre></div><h2 id="configure-error-c-compiler-cannot-create-executables" tabindex="-1">configure: error: C compiler cannot create executables <a class="header-anchor" href="#configure-error-c-compiler-cannot-create-executables" aria-label="Permalink to &quot;configure: error: C compiler cannot create executables&quot;">​</a></h2><p>在 x64 位机器上编译 x86 位程序时，报错 <code>configure: error: C compiler cannot create executables</code>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 确认主机内核为 x64 输出 amd64</span></span>
<span class="line"><span style="color:#B392F0;">dpkg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--print-architecture</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 确认打开了多架构支持 输出 i386</span></span>
<span class="line"><span style="color:#B392F0;">dpkg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--print-foreign-architectures</span></span>
<span class="line"><span style="color:#6A737D;"># 若没有</span></span>
<span class="line"><span style="color:#B392F0;">dpkg</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--add-architecture</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i386</span><span style="color:#E1E4E8;"> &amp;&amp; </span><span style="color:#B392F0;">apt-get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">update</span></span>
<span class="line"><span style="color:#6A737D;"># 安装 gcc multilib</span></span>
<span class="line"><span style="color:#B392F0;">apt-get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">gcc-multilib</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">g++-multilib</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 编译加上 -m32</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 确认主机内核为 x64 输出 amd64</span></span>
<span class="line"><span style="color:#6F42C1;">dpkg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--print-architecture</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 确认打开了多架构支持 输出 i386</span></span>
<span class="line"><span style="color:#6F42C1;">dpkg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--print-foreign-architectures</span></span>
<span class="line"><span style="color:#6A737D;"># 若没有</span></span>
<span class="line"><span style="color:#6F42C1;">dpkg</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--add-architecture</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i386</span><span style="color:#24292E;"> &amp;&amp; </span><span style="color:#6F42C1;">apt-get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">update</span></span>
<span class="line"><span style="color:#6A737D;"># 安装 gcc multilib</span></span>
<span class="line"><span style="color:#6F42C1;">apt-get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;">  </span><span style="color:#032F62;">gcc-multilib</span><span style="color:#24292E;"> </span><span style="color:#032F62;">g++-multilib</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;"># 编译加上 -m32</span></span></code></pre></div><h2 id="error-adding-symbols-dso-missing-from-command-line" tabindex="-1">error adding symbols: DSO missing from command line <a class="header-anchor" href="#error-adding-symbols-dso-missing-from-command-line" aria-label="Permalink to &quot;error adding symbols: DSO missing from command line&quot;">​</a></h2><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">/usr/bin/ld: build/release/objs/index_conn.o: undefined reference to symbol &#39;_ZN5boost6system15system_categoryEv&#39;</span></span>
<span class="line"><span style="color:#e1e4e8;">//usr/lib/x86_64-linux-gnu/libboost_system.so.1.55.0: error adding symbols: DSO missing from command line</span></span>
<span class="line"><span style="color:#e1e4e8;">collect2: error: ld returned 1 exit status</span></span>
<span class="line"><span style="color:#e1e4e8;">make[1]: *** [build/release/query_runner] Error 1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">/usr/bin/ld: build/release/objs/index_conn.o: undefined reference to symbol &#39;_ZN5boost6system15system_categoryEv&#39;</span></span>
<span class="line"><span style="color:#24292e;">//usr/lib/x86_64-linux-gnu/libboost_system.so.1.55.0: error adding symbols: DSO missing from command line</span></span>
<span class="line"><span style="color:#24292e;">collect2: error: ld returned 1 exit status</span></span>
<span class="line"><span style="color:#24292e;">make[1]: *** [build/release/query_runner] Error 1</span></span></code></pre></div><p>sol: flag add <code>-lboost_system</code>, <code>:LDFLAGS += -L/usr/lib/boost -lboost_thread -lpthread -lboost_system</code></p><h2 id="undefined-reference-to-dpi-number-columns" tabindex="-1">undefined reference to \`dpi_number_columns&#39; <a class="header-anchor" href="#undefined-reference-to-dpi-number-columns" aria-label="Permalink to &quot;undefined reference to \`dpi_number_columns&#39;&quot;">​</a></h2><p>没有 -l此库</p><h2 id="is-incompatible-with-i386-x86-64-output" tabindex="-1">is incompatible with i386:x86-64 output <a class="header-anchor" href="#is-incompatible-with-i386-x86-64-output" aria-label="Permalink to &quot;is incompatible with i386:x86-64 output&quot;">​</a></h2><p>/usr/bin/ld: i386 architecture of input file \`xxx.a(log.o)&#39; is incompatible with i386:x86-64 output</p><p>将 xxx.a 库在当前机器上重新编译 或者 flag + <code>-m32</code><br> cmake <code>set_target_properties (your_project PROPERTIES LINK_FLAGS &quot;-m32&quot;)</code></p><h2 id="d-file-offset-bits-64" tabindex="-1">-D_FILE_OFFSET_BITS=64 <a class="header-anchor" href="#d-file-offset-bits-64" aria-label="Permalink to &quot;-D_FILE_OFFSET_BITS=64&quot;">​</a></h2><p><a href="https://digital-domain.net/largefiles.html" target="_blank" rel="noreferrer">https://digital-domain.net/largefiles.html</a></p>`,20),t=[l];function p(r,c,i,d,u,m){return e(),a("div",null,t)}const h=s(o,[["render",p]]);export{b as __pageData,h as default};
