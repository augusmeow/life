import{_ as s,c as n,o as a,Q as p}from"./chunks/framework.1cc28bed.js";const d=JSON.parse('{"title":"RapidJSON","description":"","frontmatter":{},"headers":[],"relativePath":"code/cpp/lib/RapidJSON.md","filePath":"code/cpp/lib/RapidJSON.md","lastUpdated":1682241312000}'),l={name:"code/cpp/lib/RapidJSON.md"},o=p(`<h1 id="rapidjson" tabindex="-1">RapidJSON <a class="header-anchor" href="#rapidjson" aria-label="Permalink to &quot;RapidJSON&quot;">​</a></h1><p><code>RapidJSON</code>是一个C++的JSON解析器及生成器。</p><p>解析一个JSON字符串至一个document (DOM)，对DOM作出简单修改，最终把DOM转换（stringify）至JSON字符串。</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rapidjson/document.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rapidjson/writer.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;rapidjson/stringbuffer.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#F97583;">using</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">namespace</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 1. 把JSON解析至DOM。</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> json </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;{</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">project</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">rapidjson</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">,</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">stars</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">:10}&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    Document d;</span></span>
<span class="line"><span style="color:#E1E4E8;">    d.</span><span style="color:#B392F0;">Parse</span><span style="color:#E1E4E8;">(json);</span></span>
<span class="line"><span style="color:#6A737D;">    // 2. 利用DOM作出修改。</span></span>
<span class="line"><span style="color:#E1E4E8;">    Value</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> d[</span><span style="color:#9ECBFF;">&quot;stars&quot;</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    s.</span><span style="color:#B392F0;">SetInt</span><span style="color:#E1E4E8;">(s.</span><span style="color:#B392F0;">GetInt</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 3. 把DOM转换（stringify）成JSON。</span></span>
<span class="line"><span style="color:#E1E4E8;">    StringBuffer buffer;</span></span>
<span class="line"><span style="color:#E1E4E8;">    Writer</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">StringBuffer</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">writer</span><span style="color:#E1E4E8;">(buffer);</span></span>
<span class="line"><span style="color:#E1E4E8;">    d.</span><span style="color:#B392F0;">Accept</span><span style="color:#E1E4E8;">(writer);</span></span>
<span class="line"><span style="color:#6A737D;">    // Output {&quot;project&quot;:&quot;rapidjson&quot;,&quot;stars&quot;:11}</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::cout </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> buffer.</span><span style="color:#B392F0;">GetString</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">std</span><span style="color:#E1E4E8;">::endl;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">//对json里的数据遍历：</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::SizeType i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> doc.</span><span style="color:#B392F0;">Size</span><span style="color:#E1E4E8;">(); </span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">i)</span></span>
<span class="line"><span style="color:#E1E4E8;">{}</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">rapidjson</span><span style="color:#E1E4E8;">::Value </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">gameObject </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> doc[i];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rapidjson/document.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rapidjson/writer.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;rapidjson/stringbuffer.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#D73A49;">using</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">namespace</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#6A737D;">    // 1. 把JSON解析至DOM。</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> json </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;{</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">project</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">rapidjson</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">,</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">stars</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">:10}&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    Document d;</span></span>
<span class="line"><span style="color:#24292E;">    d.</span><span style="color:#6F42C1;">Parse</span><span style="color:#24292E;">(json);</span></span>
<span class="line"><span style="color:#6A737D;">    // 2. 利用DOM作出修改。</span></span>
<span class="line"><span style="color:#24292E;">    Value</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> d[</span><span style="color:#032F62;">&quot;stars&quot;</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    s.</span><span style="color:#6F42C1;">SetInt</span><span style="color:#24292E;">(s.</span><span style="color:#6F42C1;">GetInt</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;">    // 3. 把DOM转换（stringify）成JSON。</span></span>
<span class="line"><span style="color:#24292E;">    StringBuffer buffer;</span></span>
<span class="line"><span style="color:#24292E;">    Writer</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">StringBuffer</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">writer</span><span style="color:#24292E;">(buffer);</span></span>
<span class="line"><span style="color:#24292E;">    d.</span><span style="color:#6F42C1;">Accept</span><span style="color:#24292E;">(writer);</span></span>
<span class="line"><span style="color:#6A737D;">    // Output {&quot;project&quot;:&quot;rapidjson&quot;,&quot;stars&quot;:11}</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::cout </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> buffer.</span><span style="color:#6F42C1;">GetString</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">std</span><span style="color:#24292E;">::endl;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">//对json里的数据遍历：</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::SizeType i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> doc.</span><span style="color:#6F42C1;">Size</span><span style="color:#24292E;">(); </span><span style="color:#D73A49;">++</span><span style="color:#24292E;">i)</span></span>
<span class="line"><span style="color:#24292E;">{}</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">rapidjson</span><span style="color:#24292E;">::Value </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">gameObject </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> doc[i];</span></span></code></pre></div>`,4),e=[o];function t(c,r,y,E,i,F){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{d as __pageData,C as default};
