import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.1cc28bed.js";const p="/life/img/code/code/install_pcre.png",C=JSON.parse('{"title":"lua","description":"","frontmatter":{},"headers":[],"relativePath":"code/program/lang/lua.md","filePath":"code/program/lang/lua.md","lastUpdated":1686729147000}'),o={name:"code/program/lang/lua.md"},e=l(`<h1 id="lua" tabindex="-1">lua <a class="header-anchor" href="#lua" aria-label="Permalink to &quot;lua&quot;">​</a></h1><h2 id="基本操作" tabindex="-1">基本操作 <a class="header-anchor" href="#基本操作" aria-label="Permalink to &quot;基本操作&quot;">​</a></h2><blockquote><p>2021-11-01 09:51:12</p></blockquote><h3 id="类型" tabindex="-1">类型 <a class="header-anchor" href="#类型" aria-label="Permalink to &quot;类型&quot;">​</a></h3><p>数字取整操作</p><ol><li><p>使用计算方式<br> 使用%运算符，得到的结果是数字。<br><code>x%1</code> 表示x的小数部分，<code>x-x%1</code> 表示x的整数部分。</p></li><li><p>使用函数库</p></li></ol><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">math.ceil</span><span style="color:#E1E4E8;">()  </span></span>
<span class="line"><span style="color:#79B8FF;">math.ceil</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">12.2</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">--返回13  </span></span>
<span class="line"><span style="color:#79B8FF;">math.ceil</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">12.7</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">--返回13  </span></span>
<span class="line"><span style="color:#79B8FF;">math.ceil</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">12.0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">--返回12  </span></span>
<span class="line"><span style="color:#E1E4E8;">a, b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">math.modf</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">23.67</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">-- a=23 b=67</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">math.ceil</span><span style="color:#24292E;">()  </span></span>
<span class="line"><span style="color:#005CC5;">math.ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12.2</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">--返回13  </span></span>
<span class="line"><span style="color:#005CC5;">math.ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12.7</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">--返回13  </span></span>
<span class="line"><span style="color:#005CC5;">math.ceil</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">12.0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">--返回12  </span></span>
<span class="line"><span style="color:#24292E;">a, b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">math.modf</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">23.67</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">-- a=23 b=67</span></span></code></pre></div><ol start="3"><li>使用字符串格式化<br> 得到的结果是字符串形式<br><code>string.format(“%d”, 17.325) --输出17</code></li></ol><h3 id="字符串连接" tabindex="-1">字符串连接 <a class="header-anchor" href="#字符串连接" aria-label="Permalink to &quot;字符串连接&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a&quot; </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;b&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">ab</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">157</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">..</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">428</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">157428</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a&quot; </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;b&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">ab</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">157</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">..</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">428</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">157428</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span></code></pre></div><p>使用 # 来计算字符串的长度</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> len </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;www.runoob.com&quot;</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">#</span><span style="color:#E1E4E8;">len)</span></span>
<span class="line"><span style="color:#79B8FF;">14</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">#</span><span style="color:#9ECBFF;">&quot;www.runoob.com&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">14</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;www.runoob.com&quot;</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">#</span><span style="color:#24292E;">len)</span></span>
<span class="line"><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">#</span><span style="color:#032F62;">&quot;www.runoob.com&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">14</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span></span></code></pre></div><h3 id="表" tabindex="-1">表 <a class="header-anchor" href="#表" aria-label="Permalink to &quot;表&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 创建一个空的 table</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> tbl1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#6A737D;">-- 直接初始表</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> tbl2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;pear&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;grape&quot;</span><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 创建一个空的 table</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> tbl1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {}</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6A737D;">-- 直接初始表</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> tbl2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;pear&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;grape&quot;</span><span style="color:#24292E;">}</span></span></code></pre></div><p>遍历</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> tbl </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;apple&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;pear&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;orange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;grape&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> key, val </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">pairs</span><span style="color:#E1E4E8;">(tbl) </span><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Key&quot;</span><span style="color:#E1E4E8;">, key, </span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;">, val)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> tbl </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;apple&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;pear&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;orange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;grape&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> key, val </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">pairs</span><span style="color:#24292E;">(tbl) </span><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Key&quot;</span><span style="color:#24292E;">, key, </span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;">, val)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><p>输出<br> Key 1 value apple<br> Key 2 value pear Key 3 value orange<br> Key 4 value grape</p><p>判空</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">next</span><span style="color:#E1E4E8;">(a) </span><span style="color:#F97583;">~=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nil</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--不是空表</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">--空表</span></span>
<span class="line"><span style="color:#F97583;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">next</span><span style="color:#24292E;">(a) </span><span style="color:#D73A49;">~=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nil</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--不是空表</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">--空表</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre></div><h3 id="变量swap" tabindex="-1">变量swap <a class="header-anchor" href="#变量swap" aria-label="Permalink to &quot;变量swap&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">x, y </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> y, x                     </span><span style="color:#6A737D;">-- swap &#39;x&#39; for &#39;y&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">a[i], a[j] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a[j], a[i]         </span><span style="color:#6A737D;">-- swap &#39;a[i]&#39; for &#39;a[j]&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">x, y </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> y, x                     </span><span style="color:#6A737D;">-- swap &#39;x&#39; for &#39;y&#39;</span></span>
<span class="line"><span style="color:#24292E;">a[i], a[j] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a[j], a[i]         </span><span style="color:#6A737D;">-- swap &#39;a[i]&#39; for &#39;a[j]&#39;</span></span></code></pre></div><h3 id="流程控制" tabindex="-1">流程控制 <a class="header-anchor" href="#流程控制" aria-label="Permalink to &quot;流程控制&quot;">​</a></h3><p>Lua认为false和nil为假，true和非nil为真。</p><p>要注意的是Lua中 0 为 true</p><h3 id="多返回值" tabindex="-1">多返回值 <a class="header-anchor" href="#多返回值" aria-label="Permalink to &quot;多返回值&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> s, e </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string.find</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;i have a word&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;word&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(s, e)</span></span>
<span class="line"><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> s, e </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string.find</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;i have a word&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;word&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(s, e)</span></span>
<span class="line"><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13</span></span></code></pre></div><h3 id="可变参数" tabindex="-1">可变参数 <a class="header-anchor" href="#可变参数" aria-label="Permalink to &quot;可变参数&quot;">​</a></h3><p>通常在遍历变长参数的时候只需要使用 <code>{...}</code>，然而变长参数可能会包含一些 <code>nil</code>，那么就可以用 <code>select</code> 函数来访问变长参数了：<code>select(&#39;#&#39;, ...)</code> 或者 <code>select(n, ...)</code></p><ul><li><code>select(&#39;#&#39;, ...)</code> 返回可变参数的长度。</li><li><code>select(n, ...)</code> 用于返回从起点 n 开始到结束位置的所有参数列表。</li></ul><p>调用 <code>select</code> 时，必须传入一个固定实参 <code>selector(选择开关)</code> 和一系列变长参数。如果 selector 为数字 n，那么 select 返回参数列表中从索引 n 开始到结束位置的所有参数列表，否则只能为字符串 #，这样 select 返回变长参数的总数。</p><h3 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h3><p>Lua 语言中字符串可以使用以下三种方式来表示：</p><ul><li>单引号间的一串字符。</li><li>双引号间的一串字符。</li><li><code>[[</code> 与 <code>]]</code> 间的一串字符。</li></ul><p><a href="https://www.runoob.com/lua/lua-strings.html" target="_blank" rel="noreferrer">各种字符串操作</a></p><h3 id="迭代器" tabindex="-1">迭代器 <a class="header-anchor" href="#迭代器" aria-label="Permalink to &quot;迭代器&quot;">​</a></h3><ul><li>pairs: 迭代 table，可以遍历表中所有的 key 可以返回 nil</li><li>ipairs: 迭代数组，不能返回 nil,如果遇到 nil 则退出</li></ul><blockquote> 目前 <a href="https://www.runoob.com/lua/lua-metatables.html" target="_blank">研究进度</a></blockquote><p><a href="https://github.com/DrAugus/augus_cpp/blob/master/test.lua" target="_blank" rel="noreferrer">程序代码</a></p><h2 id="lua-深入" tabindex="-1">lua 深入 <a class="header-anchor" href="#lua-深入" aria-label="Permalink to &quot;lua 深入&quot;">​</a></h2><blockquote><p>2022-07-22 11:39:11</p></blockquote><h3 id="热更新" tabindex="-1">热更新 <a class="header-anchor" href="#热更新" aria-label="Permalink to &quot;热更新&quot;">​</a></h3><ul><li><a href="https://john.js.org/2020/10/27/Lua-Runtime-Hotfix/" target="_blank" rel="noreferrer">hot update</a></li><li></li></ul><h3 id="lua-的栈与内存限制" tabindex="-1"><a href="https://www.ogura.io/posts/2018/05/lua_stack_limits/" target="_blank" rel="noreferrer">lua 的栈与内存限制</a> <a class="header-anchor" href="#lua-的栈与内存限制" aria-label="Permalink to &quot;[lua 的栈与内存限制][lua-stack-limit]&quot;">​</a></h3><ul><li>一个lua文件不能超过 262144 个常量</li><li>一个控制结构不能超过 32895 个栈</li><li>upvalue数量不能超过 60 个</li><li>Lua 的每个函数(function)中不能超过 200 个本地变量</li></ul><h3 id="eluna" tabindex="-1"><a href="http://radiotail.github.io/2014/10/28/Eluna%E5%8F%91%E5%B8%83/" target="_blank" rel="noreferrer">ELuna</a> <a class="header-anchor" href="#eluna" aria-label="Permalink to &quot;[ELuna][eluna-bind]&quot;">​</a></h3><h4 id="绑定c-类" tabindex="-1">绑定C++类 <a class="header-anchor" href="#绑定c-类" aria-label="Permalink to &quot;绑定C++类&quot;">​</a></h4><p>使用<code>ELuna::registerClass( lua_State, className, constructor)</code> 函数绑定一个C++类。第一个参数是<code>lua_state</code>, 第二个参数是类在Lua中的名字。第三个参数<code>constructor</code>是这个类要用到的构造函数，通过传递具体的<code>ELuna::constructor</code> 函数来为这个类设置好一个构造函数，这个函数模板参数中的第一个参数是构造函数所属的类，后面的参数为构造函数的参数类型列表。如你需要为类Test设置一个参数为int的构造函数，则须传递<code>ELuna::constructor</code> 到<code>registerClass</code>函数中，模板参数中的int就是这个类的构造函数所需的参数类型。在Lua中创建对象时需这样写: <code>test = Test(1)</code>。</p><h4 id="绑定c-类成员函数" tabindex="-1">绑定c++类成员函数 <a class="header-anchor" href="#绑定c-类成员函数" aria-label="Permalink to &quot;绑定c++类成员函数&quot;">​</a></h4><p>使用<code>ELuna::registerMethod(lua_State, funcName, func)</code> 函数绑定一个c++类成员函数。第一个参数同上面的函数。第二个参数是函数在Lua中的名字。第三个参数是这个函数的地址。如你要注册Test类的foo函数到Lua中，应利用<code>ELuna::registerMethod(L,”foo”, &amp;Test::foo)</code>来注册函数。在Lua中的调用为<code>test:foo()</code>。</p><h4 id="绑定c-函数" tabindex="-1">绑定c++函数 <a class="header-anchor" href="#绑定c-函数" aria-label="Permalink to &quot;绑定c++函数&quot;">​</a></h4><p>使用<code>ELuna::registerFunction(lua_State, funcName, func)</code>函数c++函数。这个函数中参数的意义同registerMethod函数。例如C++中有一函数foo，利<code>ELuna:: registerFunction(L,“foo”, &amp;foo)</code>注册这个函数，在Lua调用为<code>foo()</code>。</p><h4 id="绑定lua函数" tabindex="-1">绑定Lua函数 <a class="header-anchor" href="#绑定lua函数" aria-label="Permalink to &quot;绑定Lua函数&quot;">​</a></h4><p>使用<code>ELuna::LuaFunction</code>类为Lua函数生成一个相应的C++中的对象，调用函数通过使用类的”()”方法来实现。比如在Lua中有一个函数foo(a)，其中参数a是number型，且无返回值，则在C++中的绑定方法为先利用 <code>ELuna::LuaFunction luaFoo(L, “foo”)</code> 创建一个C++对象，其中模板参数是这个Lua函数的返回值类型，因为foo无返回值，所以为void，LuaFunction的第一个参数是lua_state，第二个参数是这个Lua函数的名字。在C++中的调用方式为<code>luaFoo(1)</code>。</p><h4 id="绑定lua中的table类型" tabindex="-1">绑定Lua中的Table类型 <a class="header-anchor" href="#绑定lua中的table类型" aria-label="Permalink to &quot;绑定Lua中的Table类型&quot;">​</a></h4><p>使用<code>ELuna::LuaTable</code>类生成一个Lua Table在c++中的对象，读取插入元素通过”get”, “set”方法。比如Lua中有一个Table变量luaTable = {“hello”}，在C++中使用<code>ELuna:: LuaTable luaTable(L, “luaTable”)</code>来为luaTable在C++中生成一个对象，调用luaTable.get(1)来取得luaTable中key为1的字符串”hello”，其中模板参数char* 为get返回的value类型。调用<code>luaTable.set(2, “world”)</code>来为luaTable插入一个key=2,value=”world”的键值对。</p><details class="details custom-block"><summary>示例</summary><p>::: code-tabs#shell</p><p>@tab:active c++</p><div class="language-cpp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ELuna.h&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//define a class</span></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CPPClass</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#F97583;">public:</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#E1E4E8;">): </span><span style="color:#B392F0;">m_name</span><span style="color:#E1E4E8;">(name){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%p</span><span style="color:#9ECBFF;"> Constructor!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, name, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">~CPPClass</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%p</span><span style="color:#9ECBFF;"> Destructor!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, m_name, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //define method</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cppPrint</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">word</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, m_name, word);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cppSum</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b;</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">print</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">: </span><span style="color:#79B8FF;">%p\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, m_name, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CPPClass</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createRef</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">CPPClass</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">p</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%p</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%p</span><span style="color:#9ECBFF;"> createRef!</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, m_name, p.m_name, </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">p, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  p.m_name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;ref&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> p;</span></span>
<span class="line"><span style="color:#E1E4E8;"> } </span></span>
<span class="line"><span style="color:#F97583;">private:</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> m_name;</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//define function</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cppPrint</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;cppPrint: </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, str);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cppSum</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">CPPClass</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testnil</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">CPPClass</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">c</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CPPClass c: </span><span style="color:#79B8FF;">%p\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, c);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">nullptr</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testCPP</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">lua_State</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">L</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;"> //register a class and it&#39;s constructor. indicate all constructor&#39;s param type</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerClass</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">&gt;(L, </span><span style="color:#9ECBFF;">&quot;CPPClass&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::constructor</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">CPPClass, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;"> //register a method</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerMethod</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">&gt;(L, </span><span style="color:#9ECBFF;">&quot;cppPrint&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">::cppPrint);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerMethod</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">&gt;(L, </span><span style="color:#9ECBFF;">&quot;cppSum&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">::cppSum);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerMethod</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">CPPClass</span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">&gt;(L, </span><span style="color:#9ECBFF;">&quot;createRef&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">::createRef);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerMethod</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">&gt;(L, </span><span style="color:#9ECBFF;">&quot;print&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">&amp;</span><span style="color:#B392F0;">CPPClass</span><span style="color:#E1E4E8;">::print);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //register a function</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerFunction</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;cppPrint&quot;</span><span style="color:#E1E4E8;">, cppPrint);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerFunction</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;cppSum&quot;</span><span style="color:#E1E4E8;">, cppSum);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">registerFunction</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;testnil&quot;</span><span style="color:#E1E4E8;">, testnil);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testLua</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">lua_State</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">L</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;"> //new a LuaFunction object to bind lua function. indicate return value type</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::LuaFunction</span><span style="color:#F97583;">&lt;void&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">luaPrint</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;luaPrint&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::LuaFunction</span><span style="color:#F97583;">&lt;int&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">luaSum</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;luaSum&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //run Luafunction&#39;s () to call lua function</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">luaPrint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hello world&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;luaSum: </span><span style="color:#79B8FF;">%d\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">luaSum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //register a lua table</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::LuaTable </span><span style="color:#B392F0;">luaTable</span><span style="color:#E1E4E8;">(L, </span><span style="color:#9ECBFF;">&quot;luaTable&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#6A737D;"> //set table&#39;s key and value</span></span>
<span class="line"><span style="color:#E1E4E8;"> luaTable.</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;world&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;LuaTable: </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, luaTable.get</span><span style="color:#F97583;">&lt;int</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char*&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">), luaTable.get</span><span style="color:#F97583;">&lt;int</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">char*&gt;</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">fileName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;../sample/sample.lua&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;"> lua_State </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">L </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">openLua</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testCPP</span><span style="color:#E1E4E8;">(L);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">doFile</span><span style="color:#E1E4E8;">(L, fileName);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">testLua</span><span style="color:#E1E4E8;">(L);</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ELuna</span><span style="color:#E1E4E8;">::</span><span style="color:#B392F0;">closeLua</span><span style="color:#E1E4E8;">(L);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getchar</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ELuna.h&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//define a class</span></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CPPClass</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#D73A49;">public:</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#24292E;">): </span><span style="color:#6F42C1;">m_name</span><span style="color:#24292E;">(name){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%p</span><span style="color:#032F62;"> Constructor!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, name, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">~CPPClass</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%p</span><span style="color:#032F62;"> Destructor!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, m_name, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //define method</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cppPrint</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">word</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, m_name, word);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cppSum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">b</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">print</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">: </span><span style="color:#005CC5;">%p\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, m_name, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CPPClass</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createRef</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#E36209;">p</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%p</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%p</span><span style="color:#032F62;"> createRef!</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, m_name, p.m_name, </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">p, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  p.m_name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;ref&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> p;</span></span>
<span class="line"><span style="color:#24292E;"> } </span></span>
<span class="line"><span style="color:#D73A49;">private:</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> m_name;</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//define function</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cppPrint</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cppPrint: </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, str);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cppSum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">b</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">CPPClass</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testnil</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">c</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CPPClass c: </span><span style="color:#005CC5;">%p\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, c);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">nullptr</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testCPP</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">lua_State</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">L</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;"> //register a class and it&#39;s constructor. indicate all constructor&#39;s param type</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerClass</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">&gt;(L, </span><span style="color:#032F62;">&quot;CPPClass&quot;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::constructor</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">CPPClass, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;"> //register a method</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerMethod</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">&gt;(L, </span><span style="color:#032F62;">&quot;cppPrint&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">::cppPrint);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerMethod</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">&gt;(L, </span><span style="color:#032F62;">&quot;cppSum&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">::cppSum);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerMethod</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">CPPClass</span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">&gt;(L, </span><span style="color:#032F62;">&quot;createRef&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">::createRef);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerMethod</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">&gt;(L, </span><span style="color:#032F62;">&quot;print&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">&amp;</span><span style="color:#6F42C1;">CPPClass</span><span style="color:#24292E;">::print);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //register a function</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerFunction</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;cppPrint&quot;</span><span style="color:#24292E;">, cppPrint);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerFunction</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;cppSum&quot;</span><span style="color:#24292E;">, cppSum);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">registerFunction</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;testnil&quot;</span><span style="color:#24292E;">, testnil);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testLua</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">lua_State</span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#E36209;">L</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#6A737D;"> //new a LuaFunction object to bind lua function. indicate return value type</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::LuaFunction</span><span style="color:#D73A49;">&lt;void&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">luaPrint</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;luaPrint&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::LuaFunction</span><span style="color:#D73A49;">&lt;int&gt;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">luaSum</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;luaSum&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //run Luafunction&#39;s () to call lua function</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">luaPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hello world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;luaSum: </span><span style="color:#005CC5;">%d\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">luaSum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"> //register a lua table</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::LuaTable </span><span style="color:#6F42C1;">luaTable</span><span style="color:#24292E;">(L, </span><span style="color:#032F62;">&quot;luaTable&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#6A737D;"> //set table&#39;s key and value</span></span>
<span class="line"><span style="color:#24292E;"> luaTable.</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;world&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;LuaTable: </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, luaTable.get</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char*&gt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), luaTable.get</span><span style="color:#D73A49;">&lt;int</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">char*&gt;</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">fileName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;../sample/sample.lua&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;"> lua_State </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">L </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">openLua</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testCPP</span><span style="color:#24292E;">(L);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">doFile</span><span style="color:#24292E;">(L, fileName);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testLua</span><span style="color:#24292E;">(L);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ELuna</span><span style="color:#24292E;">::</span><span style="color:#6F42C1;">closeLua</span><span style="color:#24292E;">(L);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getchar</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>@tab lua</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">--new a class</span></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> cppClass </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CPPClass</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;cppClass&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">cppClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">--call cpp method</span></span>
<span class="line"><span style="color:#B392F0;">cppClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">cppPrint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello world!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;CPPClass&#39;s cppSum:&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#B392F0;">cppClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">cppSum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--call cpp function</span></span>
<span class="line"><span style="color:#79B8FF;">cppPrint</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello world!&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;cppSum:&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">cppSum</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;testnil: &quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">testnil</span><span style="color:#E1E4E8;">(cppClass))</span></span>
<span class="line"><span style="color:#6A737D;">-- print(&quot;testnil: &quot;, testnil(nil))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--define lua function</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">luaPrint</span><span style="color:#E1E4E8;">(str)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;luaPrint:&quot;</span><span style="color:#E1E4E8;">, str)</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">luaSum</span><span style="color:#E1E4E8;">(a, b)</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> a </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> b</span></span>
<span class="line"><span style="color:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--define table</span></span>
<span class="line"><span style="color:#E1E4E8;">luaTable </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#9ECBFF;">&quot;hello&quot;</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">local</span><span style="color:#E1E4E8;"> refClass </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cppClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">createRef</span><span style="color:#E1E4E8;">(cppClass)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;createRef: &quot;</span><span style="color:#E1E4E8;">, refClass, cppClass)</span></span>
<span class="line"><span style="color:#B392F0;">cppClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#B392F0;">refClass</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--new a class</span></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> cppClass </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CPPClass</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cppClass&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">cppClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">--call cpp method</span></span>
<span class="line"><span style="color:#6F42C1;">cppClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">cppPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello world!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;CPPClass&#39;s cppSum:&quot;</span><span style="color:#24292E;">, </span><span style="color:#6F42C1;">cppClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">cppSum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--call cpp function</span></span>
<span class="line"><span style="color:#005CC5;">cppPrint</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello world!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cppSum:&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">cppSum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">))</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;testnil: &quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">testnil</span><span style="color:#24292E;">(cppClass))</span></span>
<span class="line"><span style="color:#6A737D;">-- print(&quot;testnil: &quot;, testnil(nil))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--define lua function</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">luaPrint</span><span style="color:#24292E;">(str)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;luaPrint:&quot;</span><span style="color:#24292E;">, str)</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">luaSum</span><span style="color:#24292E;">(a, b)</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> a </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> b</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">--define table</span></span>
<span class="line"><span style="color:#24292E;">luaTable </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#032F62;">&quot;hello&quot;</span><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">local</span><span style="color:#24292E;"> refClass </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cppClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">createRef</span><span style="color:#24292E;">(cppClass)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createRef: &quot;</span><span style="color:#24292E;">, refClass, cppClass)</span></span>
<span class="line"><span style="color:#6F42C1;">cppClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6F42C1;">refClass</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">print</span><span style="color:#24292E;">()</span></span></code></pre></div><p>:::</p></details><h2 id="lua自动化测试指南" tabindex="-1">lua自动化测试指南 <a class="header-anchor" href="#lua自动化测试指南" aria-label="Permalink to &quot;lua自动化测试指南&quot;">​</a></h2><blockquote><p>2021-11-24 11:15:22</p><p><a href="https://github.com/luarocks/luarocks/wiki/Installation-instructions-for-Unix" target="_blank" rel="noreferrer">linux安装luarocks官方指南</a></p></blockquote><h3 id="luarocks安装过程" tabindex="-1">luarocks安装过程 <a class="header-anchor" href="#luarocks安装过程" aria-label="Permalink to &quot;luarocks安装过程&quot;">​</a></h3><h4 id="linux安装luarocks-redhat系列" tabindex="-1">linux安装luarocks（RedHat系列） <a class="header-anchor" href="#linux安装luarocks-redhat系列" aria-label="Permalink to &quot;linux安装luarocks（RedHat系列）&quot;">​</a></h4><p>To get a default installation of Lua and LuaRocks under <code>/usr/local</code></p><ol><li><p>First, ensure that you have development tools installed on your system, otherwise run the command below to install them</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">libtermcap-devel</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ncurses-devel</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">libevent-devel</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">readline-devel</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yum</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">libtermcap-devel</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ncurses-devel</span><span style="color:#24292E;"> </span><span style="color:#032F62;">libevent-devel</span><span style="color:#24292E;"> </span><span style="color:#032F62;">readline-devel</span></span></code></pre></div></li><li><p>build and install Lua, run the following commands to download the package tar ball, extract, build and install it.(<a href="http://www.lua.org/ftp/" target="_blank" rel="noreferrer">lua source code</a>)</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-R</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-O</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://www.lua.org/ftp/lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-zxf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lua-5.1.4</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">linux</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-R</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-O</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.lua.org/ftp/lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-zxf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lua-5.1.4</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span></code></pre></div></li><li><p>Download and unpack the LuaRocks tarball using following commands.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://luarocks.org/releases/luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zxpf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">luarocks-3.8.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://luarocks.org/releases/luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zxpf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">luarocks-3.8.0</span></span></code></pre></div></li><li><p>Run <code>./configure --with-lua-include=/usr/local/include</code>. (This will attempt to detect your installation of Lua. If you get any error messages, see the section &quot;Customizing your settings&quot;, below.)</p></li><li><p>Run <code>make</code>.</p></li><li><p>As superuser, run <code>make install</code>.</p></li></ol><h4 id="linux安装luarocks-debian系列" tabindex="-1">linux安装luarocks（Debian系列） <a class="header-anchor" href="#linux安装luarocks-debian系列" aria-label="Permalink to &quot;linux安装luarocks（Debian系列）&quot;">​</a></h4><p>To get a default installation of Lua and LuaRocks under <code>/usr/local</code></p><ol><li><p>First, ensure that you have development tools installed on your system, otherwise run the command below to install them</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">apt</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build-essential</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">libreadline-dev</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">unzip</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">apt</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build-essential</span><span style="color:#24292E;"> </span><span style="color:#032F62;">libreadline-dev</span><span style="color:#24292E;"> </span><span style="color:#032F62;">unzip</span></span></code></pre></div></li><li><p>build and install Lua, run the following commands to download the package tar ball, extract, build and install it.(<a href="http://www.lua.org/ftp/" target="_blank" rel="noreferrer">lua source code</a>)</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-R</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-O</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">http://www.lua.org/ftp/lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-zxf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lua-5.1.4</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">linux</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">test</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-R</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-O</span><span style="color:#24292E;"> </span><span style="color:#032F62;">http://www.lua.org/ftp/lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tar</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-zxf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lua-5.1.4.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lua-5.1.4</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">linux</span><span style="color:#24292E;"> </span><span style="color:#032F62;">test</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span></code></pre></div></li><li><p>Download and unpack the LuaRocks tarball using following commands.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">wget</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://luarocks.org/releases/luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zxpf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#B392F0;">-$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">luarocks-3.8.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">wget</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://luarocks.org/releases/luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tar</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zxpf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">luarocks-3.8.0.tar.gz</span></span>
<span class="line"><span style="color:#6F42C1;">-$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">luarocks-3.8.0</span></span></code></pre></div></li><li><p>Run <code>./configure --with-lua-include=/usr/local/include</code>. (This will attempt to detect your installation of Lua. If you get any error messages, see the section &quot;Customizing your settings&quot;, below.)</p></li><li><p>Run <code>make</code>.</p></li><li><p>As superuser, run <code>make install</code>.</p></li></ol><h4 id="windows子系统linux安装luarocks" tabindex="-1">windows子系统linux安装luarocks <a class="header-anchor" href="#windows子系统linux安装luarocks" aria-label="Permalink to &quot;windows子系统linux安装luarocks&quot;">​</a></h4><ol><li>安装gcc</li><li>sudo apt install lua5.1</li><li>sudo apt install luarocks</li><li>sudo apt install lua-busted</li><li>安装pcre2，安装rapidjson（这两个可以直接copy dbproxy项目里的lua文件）</li><li>安装完成</li></ol><h4 id="windows安装luarocks-极其难用-不建议在windows下操作" tabindex="-1">windows安装luarocks (极其难用 不建议在Windows下操作) <a class="header-anchor" href="#windows安装luarocks-极其难用-不建议在windows下操作" aria-label="Permalink to &quot;windows安装luarocks (极其难用 不建议在Windows下操作)&quot;">​</a></h4><ol><li><p><a href="https://www.cnblogs.com/xulang/p/12535667.html" target="_blank" rel="noreferrer">安装流程</a></p></li><li><p>安装完成后cmd运行<code>luarocks</code>看是否安装成功</p><blockquote><p>找不到luarocks命令时，需要将图示四个文件copy放入<code>lua\\5.1\\</code>路径下 <img src="https://i.loli.net/2021/11/24/HaimyRg9jqLStwb.png" alt="1"></p></blockquote></li><li><p>安装busted<code>luarocks install busted</code> * 如若出现<a href="https://github.com/Olivine-Labs/busted/issues/590" target="_blank" rel="noreferrer">Error: Parse error processing dependency &#39;lua_cliargs = 3.0&#39;</a>,请键入<code>where luarocks</code>查看路径是否为您的安装路径，此现象为您在设备上安装了多个版本的luarocks系统无法确定安装版本。</p><ul><li>如若出现 <code>&#39;mingw32-gcc&#39;不是内部或外部命令，也不是可运行的程序</code><img src="https://i.loli.net/2021/11/24/AjSJhNkOZ4FwKLY.png" alt="1"></li><li>您需要安装gcc <ol><li>mingw下载安装（windows安装<a href="https://www.msys2.org/" target="_blank" rel="noreferrer">指南</a>）</li><li>配置环境变量。 我的电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;系统变量<br> 系统变量-&gt;Path-&gt;编辑-&gt;新建-&gt;D:\\mingw\\bin-&gt;确定<br> 系统变量-&gt;新建-&gt;变量名：LIBRARY_path-&gt;变量值：D:\\mingw\\lib-&gt;确定<br> 系统变量-&gt;新建-&gt;变量名：C_INCLUDE_PATH-&gt;变量值：D:\\mingw\\include-&gt;确定</li><li>gcc -v验证安装</li></ol></li></ul></li></ol><h3 id="安装其他库" tabindex="-1">安装其他库 <a class="header-anchor" href="#安装其他库" aria-label="Permalink to &quot;安装其他库&quot;">​</a></h3><h4 id="安装busted" tabindex="-1">安装busted <a class="header-anchor" href="#安装busted" aria-label="Permalink to &quot;安装busted&quot;">​</a></h4><p><code>luarocks install busted</code> 100%安装失败</p><p>使用别的方式安装</p><ol><li>先安装<code>luarocks install luasocket</code>安装成功后 再安装 busted</li><li><code>luarocks install busted</code></li></ol><h4 id="安装-rapidjson" tabindex="-1">安装 rapidjson <a class="header-anchor" href="#安装-rapidjson" aria-label="Permalink to &quot;安装 rapidjson&quot;">​</a></h4><p><code>luarocks install rapidjson</code></p><h4 id="安装-lrexlib-pcre2" tabindex="-1">安装 Lrexlib-PCRE2 <a class="header-anchor" href="#安装-lrexlib-pcre2" aria-label="Permalink to &quot;安装 Lrexlib-PCRE2&quot;">​</a></h4><p><code>luarocks install Lrexlib-PCRE2</code></p><p>出现错误</p><blockquote><p>Could not find header file for PCRE2</p></blockquote><p><img src="`+p+`" alt="1"></p><p>安装 <code>pcre2</code><code>yum -y install pcre2-devel</code></p><p>应该安装so库 <code>yum -y install pcre2-static</code></p><p><code>find / -name &quot;*pcre2.so*&quot;</code></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#输出路径</span></span>
<span class="line"><span style="color:#B392F0;">/usr/local/lib/lua/5.1/rex_pcre2.so</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#输出路径</span></span>
<span class="line"><span style="color:#6F42C1;">/usr/local/lib/lua/5.1/rex_pcre2.so</span></span></code></pre></div><p>拷贝至lua目录</p>`,86),t=[e];function c(r,E,y,i,u,F){return n(),a("div",null,t)}const h=s(o,[["render",c]]);export{C as __pageData,h as default};
