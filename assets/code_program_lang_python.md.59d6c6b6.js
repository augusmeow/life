import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.1cc28bed.js";const F=JSON.parse('{"title":"Python","description":"","frontmatter":{},"headers":[],"relativePath":"code/program/lang/python.md","filePath":"code/program/lang/python.md","lastUpdated":1686729147000}'),p={name:"code/program/lang/python.md"},o=l(`<h1 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h1><h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;">​</a></h2><h3 id="valueerror-check-hostname-requires-server-hostname" tabindex="-1">ValueError: check_hostname requires server_hostname <a class="header-anchor" href="#valueerror-check-hostname-requires-server-hostname" aria-label="Permalink to &quot;ValueError: check_hostname requires server_hostname&quot;">​</a></h3><p>pip安装lib时报错<code>ValueError: check_hostname requires server_hostname</code>，是由网络代理导致，关掉VPN即可解决</p><h2 id="python-提取字符串中的指定字符-正则表达式" tabindex="-1">python 提取字符串中的指定字符 正则表达式 <a class="header-anchor" href="#python-提取字符串中的指定字符-正则表达式" aria-label="Permalink to &quot;python 提取字符串中的指定字符 正则表达式&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">match_strings</span><span style="color:#E1E4E8;">(text, begin, end):</span></span>
<span class="line"><span style="color:#E1E4E8;">    pattern </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> re.compile(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">begin</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">(.*?)</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">end</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    matches </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pattern.findall(text)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> matches</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">match_strings</span><span style="color:#24292E;">(text, begin, end):</span></span>
<span class="line"><span style="color:#24292E;">    pattern </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> re.compile(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">begin</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">(.*?)</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">end</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    matches </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pattern.findall(text)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> matches</span></span></code></pre></div><p>如果 字符串里有 <code>\\n</code> 记得替换掉 否则不生效</p><h2 id="一维转二维" tabindex="-1">一维转二维 <a class="header-anchor" href="#一维转二维" aria-label="Permalink to &quot;一维转二维&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> numpy</span></span>
<span class="line"><span style="color:#E1E4E8;">new_list </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [i </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">)]</span></span>
<span class="line"><span style="color:#E1E4E8;">newnew </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> numpy.array(new_list).reshape(</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy</span></span>
<span class="line"><span style="color:#24292E;">new_list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [i </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">9</span><span style="color:#24292E;">)]</span></span>
<span class="line"><span style="color:#24292E;">newnew </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> numpy.array(new_list).reshape(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="二维转一维" tabindex="-1">二维转一维 <a class="header-anchor" href="#二维转一维" aria-label="Permalink to &quot;二维转一维&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">foo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">], [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]]</span></span>
<span class="line"><span style="color:#E1E4E8;">new_foo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sum</span><span style="color:#E1E4E8;">(foo, [])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">foo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]]</span></span>
<span class="line"><span style="color:#24292E;">new_foo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(foo, [])</span></span></code></pre></div><h2 id="使用filter-去除list的空值" tabindex="-1">使用filter()去除list的空值 <a class="header-anchor" href="#使用filter-去除list的空值" aria-label="Permalink to &quot;使用filter()去除list的空值&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ad&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;fi&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ar&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;ff&#39;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">d </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">filter</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, d))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ad&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;fi&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ar&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ff&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">d </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">filter</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, d))</span></span></code></pre></div><h2 id="去重" tabindex="-1">去重 <a class="header-anchor" href="#去重" aria-label="Permalink to &quot;去重&quot;">​</a></h2><p>对于一维list, 可以直接使用set转换</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(a))  </span><span style="color:#6A737D;"># [1,2,3]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(a))  </span><span style="color:#6A737D;"># [1,2,3]</span></span></code></pre></div><p>对于多维list, 可以使用递归的方法，先对每一维进行去重，然后递归进行下一维的去重</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">a </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">],[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">remove_duplicate</span><span style="color:#E1E4E8;">(arr):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 判断是否为一维list</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">isinstance</span><span style="color:#E1E4E8;">(arr[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 如果是多维list, 递归进行去重</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> arr:</span></span>
<span class="line"><span style="color:#E1E4E8;">            remove_duplicate(i)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 如果是一维list, 直接使用set进行去重</span></span>
<span class="line"><span style="color:#E1E4E8;">        arr[:] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(arr))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span></span>
<span class="line"><span style="color:#E1E4E8;">remove_duplicate(a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(a)  </span><span style="color:#6A737D;"># [[1,2,3],[2,3,4]]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">],[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">remove_duplicate</span><span style="color:#24292E;">(arr):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 判断是否为一维list</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">isinstance</span><span style="color:#24292E;">(arr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 如果是多维list, 递归进行去重</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> arr:</span></span>
<span class="line"><span style="color:#24292E;">            remove_duplicate(i)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 如果是一维list, 直接使用set进行去重</span></span>
<span class="line"><span style="color:#24292E;">        arr[:] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(arr))</span></span>
<span class="line"><span style="color:#24292E;">        </span></span>
<span class="line"><span style="color:#24292E;">remove_duplicate(a)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(a)  </span><span style="color:#6A737D;"># [[1,2,3],[2,3,4]]</span></span></code></pre></div><p>上面的代码可以处理多维list的去重问题，但是这种方法需要修改原来的list，如果不希望修改原来的list，可以使用深拷贝来进行去重</p><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> copy.deepcopy(a)</span></span>
<span class="line"><span style="color:#E1E4E8;">remove_duplicate(b)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> copy.deepcopy(a)</span></span>
<span class="line"><span style="color:#24292E;">remove_duplicate(b)</span></span></code></pre></div><h2 id="os-name" tabindex="-1">os name <a class="header-anchor" href="#os-name" aria-label="Permalink to &quot;os name&quot;">​</a></h2><p><code>os.name</code>: The name of the operating system dependent module imported. The following names have currently been registered: &#39;posix&#39;, &#39;nt&#39;, &#39;java&#39;.</p><ul><li><code>posix</code>: mac</li><li><code>nt</code>: windows</li></ul><h2 id="argparse" tabindex="-1"><a href="https://docs.python.org/zh-cn/3.11/library/argparse.html" target="_blank" rel="noreferrer">argparse</a> <a class="header-anchor" href="#argparse" aria-label="Permalink to &quot;[argparse]&quot;">​</a></h2><p>good</p><h2 id="url解码" tabindex="-1">URL解码 <a class="header-anchor" href="#url解码" aria-label="Permalink to &quot;URL解码&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> urllib.parse </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> unquote</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用urllib.parse模块的unquote()函数来进行URL解码：</span></span>
<span class="line"><span style="color:#E1E4E8;">encoded_url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https%3A</span><span style="color:#79B8FF;">%2F%2F</span><span style="color:#9ECBFF;">www.example.com</span><span style="color:#79B8FF;">%2F%3F</span><span style="color:#9ECBFF;">q%3Dhello%20world&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">decoded_url </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> unquote(encoded_url)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(decoded_url)  </span><span style="color:#6A737D;"># 输出：https://www.example.com/?q=hello world</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> urllib.parse </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> unquote</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 使用urllib.parse模块的unquote()函数来进行URL解码：</span></span>
<span class="line"><span style="color:#24292E;">encoded_url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https%3A</span><span style="color:#005CC5;">%2F%2F</span><span style="color:#032F62;">www.example.com</span><span style="color:#005CC5;">%2F%3F</span><span style="color:#032F62;">q%3Dhello%20world&#39;</span></span>
<span class="line"><span style="color:#24292E;">decoded_url </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> unquote(encoded_url)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(decoded_url)  </span><span style="color:#6A737D;"># 输出：https://www.example.com/?q=hello world</span></span></code></pre></div><h2 id="html-解码" tabindex="-1">html 解码 <a class="header-anchor" href="#html-解码" aria-label="Permalink to &quot;html 解码&quot;">​</a></h2><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">html_string </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&amp;ndash;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">ddd </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> html.unescape(html_string)</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(ddd)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> html</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">html_string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&amp;ndash;&quot;</span></span>
<span class="line"><span style="color:#24292E;">ddd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> html.unescape(html_string)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(ddd)</span></span></code></pre></div><div class="language-py vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> bs4 </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> BeautifulSoup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">html_string </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&amp;lt;p&amp;gt;This is a paragraph&amp;lt;/p&amp;gt;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">soup </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> BeautifulSoup(html_string, </span><span style="color:#9ECBFF;">&quot;html.parser&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">decoded_html </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> soup.unescape()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(decoded_html) </span><span style="color:#6A737D;"># &quot;&lt;p&gt;This is a paragraph&lt;/p&gt;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> bs4 </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> BeautifulSoup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">html_string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&amp;lt;p&amp;gt;This is a paragraph&amp;lt;/p&amp;gt;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">soup </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> BeautifulSoup(html_string, </span><span style="color:#032F62;">&quot;html.parser&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">decoded_html </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> soup.unescape()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(decoded_html) </span><span style="color:#6A737D;"># &quot;&lt;p&gt;This is a paragraph&lt;/p&gt;&quot;</span></span></code></pre></div>`,30),e=[o];function t(c,r,y,E,i,d){return n(),a("div",null,e)}const u=s(p,[["render",t]]);export{F as __pageData,u as default};
