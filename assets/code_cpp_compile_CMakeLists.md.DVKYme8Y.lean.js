import{_ as i,c as a,a3 as l,o as n}from"./chunks/framework.DDs3IadZ.js";const g=JSON.parse('{"title":"CMakeLists","description":"","frontmatter":{"icon":"vscode-icons:file-type-cmake"},"headers":[],"relativePath":"code/cpp/compile/CMakeLists.md","filePath":"code/cpp/compile/CMakeLists.md","lastUpdated":1716791141000}'),t={name:"code/cpp/compile/CMakeLists.md"};function h(k,s,e,p,E,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="cmakelists" tabindex="-1">CMakeLists <a class="header-anchor" href="#cmakelists" aria-label="Permalink to &quot;CMakeLists&quot;">​</a></h1><h2 id="基本语法" tabindex="-1">基本语法 <a class="header-anchor" href="#基本语法" aria-label="Permalink to &quot;基本语法&quot;">​</a></h2><h3 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h3><p>使用set命令显式定义及赋值，在非if语句中，使用\${}引用，if中直接使用变量名引用；后续的set命令会清理变量原来的值；</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (args ...) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 命令不分大小写，参数使用空格分隔，使用双引号引起参数中空格</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var a;b;c) &lt;=&gt; set(var a b c) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义变量var并赋值为a;b;c这样一个string list</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Add_executable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${var}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) &lt;=&gt; Add_executable(a b c) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 变量使用\${xxx}引用</span></span></code></pre></div><h3 id="条件语句" tabindex="-1">条件语句 <a class="header-anchor" href="#条件语句" aria-label="Permalink to &quot;条件语句&quot;">​</a></h3><table tabindex="0"><thead><tr><th style="text-align:center;">逻辑值</th><th style="text-align:center;">常量值</th></tr></thead><tbody><tr><td style="text-align:center;">true</td><td style="text-align:center;">1、ON、YES、TRUE、Y、非0数字</td></tr><tr><td style="text-align:center;">false</td><td style="text-align:center;">0、OFF、NO、FALSE、N、IGNORE、NOTFOUNT、空字符串、-NOTFOUND结尾字符串</td></tr></tbody></table><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()/elseif()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(var)</span></span></code></pre></div><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 逻辑运算</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;condition&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 非运算</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;cond1&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;cond2&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 与运算</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;cond1&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;cond2&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#或运算</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((condition) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (condition </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (condition))) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 有括号时，先计算括号的逻辑值</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 存在性判断</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">COMMAND</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 给定参数是可调用的命令、宏、函数时</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POLICY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> policy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-id) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 给定的策略存在时</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TARGET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 给定的目标参数是通过add_executable()、add_library() 或 add_custom_target() 命令创建并存在的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEST</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 给定参数是通过add_test()创建并存在的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFINED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CACHE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;}|ENV{&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;}) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果变量、缓存、环境变量存在（其取值无关）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IN_LIST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果&lt;variable|string&gt;存在于列表变量&lt;variable&gt;中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 文件判断</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 以下路径参数可以为相对路径或绝对路径，相对是指相对于当前执行cmake的路径。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXISTS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-to-file-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-directory) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果文件/目录存在，当参数是连接时表示连接指向的实体存在。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS_NEWER_THAN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file2) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true file1比file2新</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS_DIRECTORY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-to-directory) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果参数是目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS_SYMLINK</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> file-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果参数是一个链接</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IS_ABSOLUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># true 如果参数是绝对路径</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 比较</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 正则匹配</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MATCHES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> regex)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数字比较</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GREATER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ==</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">LESS_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GREATER_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;=</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串比较</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STRLESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STRGREATER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STREQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ==</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STRLESS_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STRGREATER_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;=</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 版本号比较</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VERSION_LESS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VERSION_GREATER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VERSION_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ==</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; VERSION_LESS_EQUAL &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;=</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VERSION_GREATER_EQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;variable|</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &gt;=</span></span></code></pre></div><h3 id="循环语句" tabindex="-1">循环语句 <a class="header-anchor" href="#循环语句" aria-label="Permalink to &quot;循环语句&quot;">​</a></h3><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(VAR a b c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${VAR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Endforeach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f)</span></span></code></pre></div><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENDWHILE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="module" tabindex="-1">Module <a class="header-anchor" href="#module" aria-label="Permalink to &quot;Module&quot;">​</a></h2><h3 id="fmt" tabindex="-1">fmt <a class="header-anchor" href="#fmt" aria-label="Permalink to &quot;fmt&quot;">​</a></h3><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fmt_DIR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${PROJECT_SOURCE_DIR}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/3rd/fmt/build)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">find_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fmt)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add_executable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${name}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${file}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">target_link_libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${name}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fmt::fmt)</span></span></code></pre></div><h2 id="others" tabindex="-1">others <a class="header-anchor" href="#others" aria-label="Permalink to &quot;others&quot;">​</a></h2><h3 id="导入库文件" tabindex="-1">导入库文件 <a class="header-anchor" href="#导入库文件" aria-label="Permalink to &quot;导入库文件&quot;">​</a></h3><p>需要添加的内容包括</p><p>1.库文件搜索路径: <code>link_directories</code>(输入你的MinGW中的lib文件夹的完整路径，不用引号)</p><p>2.需要添加的库名称： 这里我用到的库是ws2_32库文件，因此添加的内容是：link_libraries(ws2_32)</p><p>以上内容需要添加在<code>add_executable</code>前。 在<code>add_executable</code>后加上<code>target_link_libraries(&quot;执行名称&quot;空格库名)</code> 即<code>target_link_libraries(YOUR_PROJECT ws2_32)</code></p><h3 id="一个示例" tabindex="-1">一个示例 <a class="header-anchor" href="#一个示例" aria-label="Permalink to &quot;一个示例&quot;">​</a></h3><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LINK_DIR /usr/lib2/libnet-1.2-rc3/src/.libs)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(LINK_DIR2 /usr/lib2/libpcap-1.0.0)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PRO simple_network_sniffer)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#1.cmake verson，指定cmake版本</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">cmake_minimum_required</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VERSION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 3.2)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#2.project name，指定项目的名称，一般和项目的文件夹名称对应</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PROJECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${PRO}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#3.head file path，头文件目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INCLUDE_DIRECTORIES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ../include</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">link_directories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${LINK_DIR}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        \${LINK_DIR2}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">link_libraries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(net pcap)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#4.source directory，源文件目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AUX_SOURCE_DIRECTORY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(../src DIR_SRCS)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#5.set environment variable，设置环境变量，编译用到的源文件全部都要放到这里，否则编译能够通过，但是执行的时候会出现各种问题，比如&quot;symbol lookup error xxxxx , undefined symbol&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SET(TEST_MATH \${DIR_SRCS})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#6.add executable file，添加要编译的可执行文件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD_EXECUTABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${PRO}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> \${DIR_SRCS}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#7.add link library，添加可执行文件所需要的库，比如我们用到了libm.so（命名规则：lib+name+.so），就添加该库的名称</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TARGET_LINK_LIBRARIES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">\${PRO}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> net pcap)</span></span></code></pre></div><h2 id="内部变量" tabindex="-1">内部变量 <a class="header-anchor" href="#内部变量" aria-label="Permalink to &quot;内部变量&quot;">​</a></h2><p><code>CMAKE_C_COMPILER</code>：指定C编译器</p><p><code>CMAKE_CXX_COMPILER</code>：</p><p><code>CMAKE_C_FLAGS</code>：编译C文件时的选项，如-g；也可以通过<code>add_definitions</code>添加编译选项</p><p><code>EXECUTABLE_OUTPUT_PATH</code>：可执行文件的存放路径</p><p><code>LIBRARY_OUTPUT_PATH</code>：库文件路径</p><p><code>CMAKE_BUILD_TYPE</code>：build类型(Debug, Release, ...)，CMAKE_BUILD_TYPE=Debug</p><p><code>BUILD_SHARED_LIBS</code>：Switch between shared and static libraries</p><p>内置变量的使用：</p><ul><li>在CMakeLists.txt中指定，使用set</li><li>cmake命令中使用，如<code>cmake -DBUILD_SHARED_LIBS=OFF</code></li></ul><h2 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h2><p>project(HELLO)#指定项目名称，生成的VC项目的名称；</p><blockquote><p>使用\${HELLO_SOURCE_DIR}表示项目根目录</p></blockquote><p>include_directories：指定头文件的搜索路径，相当于指定gcc的-I参数</p><blockquote><p>include_directories (\${HELLO_SOURCE_DIR}/Hello)#增加Hello为include目录</p></blockquote><p>link_directories：动态链接库或静态链接库的搜索路径，相当于gcc的-L参数</p><blockquote><p>link_directories (\${HELLO_BINARY_DIR}/Hello)#增加Hello为link目录</p></blockquote><p>add_subdirectory：包含子目录</p><blockquote><p>add_subdirectory (Hello)</p></blockquote><p>add_executable：编译可执行程序，指定编译，好像也可以添加.o文件</p><blockquote><p>add_executable (helloDemo demo.cxx demo_b.cxx)#将cxx编译成可执行文件——</p></blockquote><p>add_definitions：添加编译参数</p><blockquote><p>add_definitions(-DDEBUG)将在gcc命令行添加DEBUG宏定义；</p></blockquote><blockquote><p>add_definitions( “-Wall -ansi –pedantic –g”)</p></blockquote><p>target_link_libraries：添加链接库,相同于指定-l参数</p><blockquote><p>target_link_libraries(demo Hello) #将可执行文件与Hello连接成最终文件demo</p></blockquote><p>add_library:</p><blockquote><p>add_library(Hello hello.cxx)#将hello.cxx编译成静态库如libHello.a</p></blockquote><p>add_custom_target:</p><p>message( status|fatal_error, “message”):</p><p>set_target_properties( ... ): lots of properties... OUTPUT_NAME, VERSION, ....</p><p>link_libraries( lib1 lib2 ...): All targets link with the same set of libs</p><h3 id="注意" tabindex="-1">注意 <a class="header-anchor" href="#注意" aria-label="Permalink to &quot;注意&quot;">​</a></h3><p>CMAKE生成的makefile能够处理好.h文件更改时只编译需要的cpp文件</p><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><p>1）怎样获得一个目录下的所有源文件</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">aux_source_directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;dir&gt; &lt;variable&gt;)</span></span></code></pre></div><ul><li>将dir中所有源文件（不包括头文件）保存到变量variable中，然后可以add_executable (ss7gw \${variable})这样使用。</li></ul><p>2）怎样指定项目编译目标</p><ul><li><code>project</code>命令指定</li></ul><p>3）怎样添加动态库和静态库</p><ul><li><code>target_link_libraries</code>命令添加即可</li></ul><p>4）怎样在执行CMAKE时打印消息</p><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([SEND_ERROR | STATUS | FATAL_ERROR] </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;message to display&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...)</span></span></code></pre></div><ul><li><strong>注意大小写</strong></li></ul><p>5）怎样指定头文件与库文件路径</p><ul><li><p><code>include_directories</code>与<code>link_directories</code></p></li><li><p>可以多次调用以设置多个路径</p></li><li><p><code>link_directories</code>仅对其后面的targets起作用</p></li></ul><p>6）怎样区分debug、release版本</p><ul><li>建立debug/release两目录，分别在其中执行<code>cmake -DCMAKE_BUILD_TYPE=Debug</code>(<code>cmake -DCMAKE_BUILD_TYPE=Release</code>) ，需要编译不同版本时进入不同目录执行make即可；</li></ul><p><strong>Debug版会使用参数<code>-g</code>；Release版使用<code>-O3 –DNDEBUG</code></strong></p><ul><li>另一种设置方法——例如DEBUG版设置编译参数<code>DDEBUG</code></li></ul><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (DEBUG_mode)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    add_definitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(-DDEBUG)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENDIF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><p>在执行cmake时增加参数即可，例如<code>cmake -D DEBUG_mode=ON</code></p><p>7）怎样设置条件编译</p><p>例如debug版设置编译选项DEBUG，并且更改不应改变CMakelists.txt</p><ul><li>使用option command，eg：</li></ul><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DEBUG_mode </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ON for debug or OFF for release&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (DEBUG_mode)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    add_definitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(-DDEBUG)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENDIF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><ul><li><p>使其生效的方法：首先cmake生成makefile，然后make edit_cache编辑编译选项；Linux下会打开一个文本框，可以更改，该完后再make生成目标文件——emacs不支持make edit_cache；</p></li><li><p><code>局限</code>：这种方法不能直接设置生成的makefile，而是必须使用命令在make前设置参数；对于debug、release版本，相当于需要两个目录，分别先cmake一次，然后分别make edit_cache一次；</p></li><li><p><code>期望的效果</code>：在执行cmake时直接通过参数指定一个开关项，生成相应的makefile——可以这样做，例如<code>cmake –DDEBUGVERSION=ON</code></p></li></ul><p>8）怎样添加编译宏定义</p><ul><li>使用<code>add_definitions</code>命令，见命令部分说明</li></ul><p>9）怎样添加编译依赖项 用于确保编译目标项目前依赖项必须先构建好</p><ul><li><code>add_dependencies</code></li></ul><p>10）怎样指定目标文件目录</p><ul><li>建立一个新的目录，在该目录中执行cmake生成Makefile文件，这样编译结果会保存在该目录——类似</li></ul><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SET_TARGET_PROPERTIES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ss7gw PROPERTIES</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">        RUNTIME_OUTPUT_DIRECTORY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${BIN_DIR}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>11）很多文件夹，难道需要把每个文件夹编译成一个库文件？</p><ul><li>可以不在子目录中使用CMakeList.txt，直接在上层目录中指定子目录</li></ul><p>12）怎样设定依赖的cmake版本</p><ul><li><code>cmake_minimum_required(VERSION 2.6)</code></li></ul><p>13）相对路径怎么指定</p><ul><li><code>\${projectname_SOURCE_DIR}</code>表示根源文件目录，<code>\${projectname_BINARY_DIR}</code>表示根二进制文件目录？</li></ul><p>14）怎样设置编译中间文件的目录</p><ul><li><code>TBD</code></li></ul><p>15）怎样在IF语句中使用字串或数字比较</p><ul><li><p>数字比较<code>LESS、GREATER、EQUAL</code>，字串比较<code>STRLESS、STRGREATER、STREQUAL</code>，</p></li><li><p>Eg：</p></li></ul><div class="language-cmake vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmake</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AAA abc)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">IF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (AAA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STREQUAL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> abc)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(STATUS </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#应该打印true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENDIF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><p>16）更改h文件时是否只编译必须的cpp文件</p><ul><li>是</li></ul><p>17）机器上安装了VC7和VC8，CMAKE会自动搜索编译器，但是怎样指定某个版本？</p><ul><li><code>TBD</code></li></ul><p>18）怎样根据OS指定编译选项</p><ul><li><code>IF( APPLE ); IF( UNIX ); IF( WIN32 )</code></li></ul><p>19）能否自动执行某些编译前、后命令？</p><ul><li>可以，TBD</li></ul><p>20）怎样打印make的输出</p><ul><li>make VERBOSE=1</li></ul>`,109)]))}const c=i(t,[["render",h]]);export{g as __pageData,c as default};
